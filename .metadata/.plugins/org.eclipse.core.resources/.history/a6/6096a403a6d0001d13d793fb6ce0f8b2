package Solution7;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;

public class Solu7Prac {
	public int solution(int[] nums) {

		HashSet<Integer> HS = new HashSet<>();

		for (int i = 0; i < nums.length; i++) {
			HS.add(nums[i]);
		}

		int[] numberArray = new int[HS.size()];
		Iterator<Integer> iter = HS.iterator();
		int i = 0;

		while (iter.hasNext()) {
			numberArray[i] = iter.next();
			i++;
		}

		Arrays.sort(numberArray);
		System.out.println(Arrays.toString(numberArray));

		int max = 0;

		for (int j = 0; j < numberArray.length; j++) {

			int counting = 0;
			int key = 1;

			for (int k = j; k < numberArray.length; k++) {
				if (numberArray[j] + key == numberArray[k]) {
					counting++;

					if (counting > max) {
						max = counting;
					}
					key++;
				}
			}
		}
		return max + 1;
	}

	public static void main(String[] args) {
		Solu7Prac T = new Solu7Prac();
//		System.out.println(T.solution(new int[] { 8, 1, 9, 3, 10, 2, 4, 0, 2, 3 }));
//		System.out.println(T.solution(new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0 }));
//		System.out.println(T.solution(new int[] { 3, 3, 3, 3, 3, 3, 3, 3 }));
		System.out.println(T.solution(new int[] { -3, -1, -2, 0, 3, 3, 5, 6, 2, 2, 1, 1 }));
//		System.out.println(T.solution(new int[] { -5, -3, -1, -4, 3, 3, 5, 6, 2, 2, 1, 1, 7 }));
	}
}