package Solution3;

public class Practice {
	public int solution(int[][] board) {
		// √—±Ê¿Ã
		int length = board.length;

		int[] directionX = { -1, 0, 1, 0 };
		int[] directionY = { 0, 1, 0, -1 };

		int[] human = new int[2];
		int[] dog = new int[2];
//		========================================================
		for (int i = 0; i < board.length; i++) {
			for (int j = 0; j < board.length; j++) {
				if (board[i][j] == 2) {
					human[0] = i;
					human[1] = j;
				}
				if (board[i][j] == 3) {
					dog[0] = i;
					dog[1] = j;
				}
			}
		}
//		========================================================
		int dirHuman = 0;
		int dirDog = 0;
		int count = 0;

		while (count < 10000) {
			count++;

			int x1 = human[0] + directionX[dirHuman];
			int y1 = human[1] + directionY[dirHuman];

			int x2 = dog[0] + directionX[dirDog];
			int y2 = dog[1] + directionY[dirDog];

			boolean flagHuman = true;
			boolean flagDog = true;

			if (x1 < 0 || y1 < 0 || x1 >= length || y1 >= length || board[x1][y1] == 1) {
				dirHuman = (dirHuman + 1) % 4;
				flagHuman = false;
			}
			if (x2 < 0 || y2 < 0 || x2 >= length || y2 >= length || board[x2][y2] == 1) {
				dirDog = (dirDog + 1) % 4;
				flagDog = false;
			}
			if (flagHuman == true) {
				human[0] = x1;
				human[1] = y1;
			}
			if (flagDog == true) {
				dog[0] = x2;
				dog[1] = y2;
			}
			if (human == dog)
				break;
		}
		if (count >= 10000)
			return 0;
		return count;
	}

	public static void main(String[] args) {
		Practice T = new Practice();
		int[][] arr1 = { { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 1, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0, 2, 0, 0 },
				{ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 3, 0, 0, 0, 1 },
				{ 0, 0, 0, 1, 0, 1, 0, 0, 0, 0 }, { 0, 1, 0, 1, 0, 0, 0, 0, 0, 0 } };
		System.out.println(T.solution(arr1));
		int[][] arr2 = { { 1, 0, 0, 0, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
				{ 0, 0, 1, 1, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 0, 1, 0, 0, 0, 0 },
				{ 1, 0, 0, 0, 0, 0, 1, 0, 1, 0 }, { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0, 0, 2, 1 },
				{ 0, 0, 0, 1, 0, 1, 0, 0, 0, 1 }, { 0, 1, 0, 1, 0, 0, 0, 0, 0, 3 } };
		System.out.println(T.solution(arr2));
	}
}