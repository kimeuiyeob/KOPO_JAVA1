package Solution3;

public class Practice {

	public int solution(int[][] board) {
		// 인덱스 갯수 밖으로 넘어가면 안되기때문에 길이를 변수에 담는다.
		int finalLine = board.length;

		// 방향 설정
		int[] direcX = { -1, 0, 1, 0 };
		int[] direcY = { 0, 1, 0, -1 };

		// 사람과 개의 현재 위치 좌표
		int humanX = 0, humanY = 0;
		int dogX = 0, dogY = 0;

		for (int i = 0; i < board.length; i++) {
			int[] boardArry = board[i];
			for (int j = 0; j < boardArry.length; j++) {
				if (board[i][j] == 2) {
					humanX = i;
					humanY = j;
				}
				if (board[i][j] == 3) {
					dogX = i;
					dogY = j;
				}
			}
		}
		int d1 = 0, d2 = 0, count = 0;
		while (count < 10000) {
			count++;
			int nx1 = x1 + dx[d1];
			int ny1 = y1 + dy[d1];
			int nx2 = x2 + dx[d2];
			int ny2 = y2 + dy[d2];
			boolean flag1 = true, flag2 = true;

			if (nx1 < 0 || nx1 >= n || ny1 < 0 || ny1 >= n || board[nx1][ny1] == 1) {
				d1 = (d1 + 1) % 4;
				flag1 = false;
			}
			if (nx2 < 0 || nx2 >= n || ny2 < 0 || ny2 >= n || board[nx2][ny2] == 1) {
				d2 = (d2 + 1) % 4;
				flag2 = false;
			}
			if (flag1 == true) {
				x1 = nx1;
				y1 = ny1;
			}
			if (flag2 == true) {
				x2 = nx2;
				y2 = ny2;
			}
			if (x1 == x2 && y1 == y2)
				break;
		}
		if (count >= 10000)
			return 0;
		return count;
	}

	public static void main(String[] args) {
		Solution3 T = new Solution3();
		int[][] arr1 = { { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 1, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0, 2, 0, 0 },
				{ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 3, 0, 0, 0, 1 },
				{ 0, 0, 0, 1, 0, 1, 0, 0, 0, 0 }, { 0, 1, 0, 1, 0, 0, 0, 0, 0, 0 } };
		System.out.println(T.solution(arr1));
		int[][] arr2 = { { 1, 0, 0, 0, 1, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
				{ 0, 0, 1, 1, 0, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 0, 1, 0, 0, 0, 0 },
				{ 1, 0, 0, 0, 0, 0, 1, 0, 1, 0 }, { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 0, 0, 2, 1 },
				{ 0, 0, 0, 1, 0, 1, 0, 0, 0, 1 }, { 0, 1, 0, 1, 0, 0, 0, 0, 0, 3 } };
		System.out.println(T.solution(arr2));
	}

}