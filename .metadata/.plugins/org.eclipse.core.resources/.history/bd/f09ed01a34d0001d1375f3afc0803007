package Solution;

import java.util.Arrays;

class Solution {

	public char[] solution(int n, int[][] ladder) {

		// inside have alphabet A ~ n
		char[] answer = new char[n];

		// change number to alphabet
		for (int i = 0; i < answer.length; i++) {
			answer[i] = (char) (i + 65);
		}

		for (int i = 0; i < answer.length; i++) {

			char[] inArr = answer[i];

			for (int j = 0; j < inArr.length; j++) {

				char tmp = inArr[j];

				answer[j] = answer[j - 1];
				answer[j - 1] = tmp;
			}
		}

		return answer;
	}

	public static void main(String[] args) {

		Solution T = new Solution();
		System.out.println(Arrays.toString(T.solution(5, new int[][] { { 1, 3 }, { 2, 4 }, { 1, 4 } })));
//
//		System.out.println(Arrays.toStr	ing(T.solution(7, new int[][] { { 1, 3, 5 }, { 1, 3, 6 }, { 2, 4 } })));
//
//		System.out.println(
//				Arrays.toString(T.solution(8, new int[][] { { 1, 5 }, { 2, 4, 7 }, { 1, 5, 7 }, { 2, 5, 7 } })));
//
//		System.out.println(Arrays.toString(T.solution(12,
//				new int[][] { { 1, 5, 8, 10 }, { 2, 4, 7 }, { 1, 5, 7, 9, 11 }, { 2, 5, 7, 10 }, { 3, 6, 8, 11 } })));
	}

}